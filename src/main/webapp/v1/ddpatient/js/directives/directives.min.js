var ddpatientDirectives = angular.module("ddpatientDirectives", ["ui.rCalendar"]);
ddpatientDirectives.directive("compare", ["$ngModel", function (a) {
    return {
        link: function (c, e, b, d) {
            d.$parsers.unshift(function (f) {
                if (f == "" || b.compare == "" || f == b.compare) {
                    d.$setValidity("compare", true)
                } else {
                    d.$setValidity("compare", false)
                }
                return f
            })
        }
    }
}]);
ddpatientDirectives.directive("ngScroll", function () {
    return {
        link: function (b, d, a, c) {
            $(d).mCustomScrollbar({scrollButtons: {enable: true}})
        }
    }
});
ddpatientDirectives.directive("ddexpander", function () {
    return {
        restrict: "EA",
        replace: true,
        transclude: true,
        scope: {expanderTitle: "=expanderTitle"},
        template: '<div><div class="item item-divider" ng-click="toggle()">{{expanderTitle}}</div><div class="body" ng-show="showMe" ng-transclude></div></div>',
        link: function (d, c, b) {
            d.showMe = true;
            d.toggle = function a() {
                d.showMe = !d.showMe
            }
        }
    }
});
ddpatientDirectives.directive("errSrc", function () {
    return {
        restrict: "EA", replace: true, link: function (c, b, a) {
            if (!a.ngSrc) {
                a.$set("src", a.errSrc)
            }
        }
    }
});
ddpatientDirectives.directive("ddbackbutton", ["$ionicHistory", function (a) {
    return {
        restrict: "EA",
        replace: true,
        transclude: true,
        template: '<a  class="button button-icon icon ion-chevron-left" ng-click="goBack()"></a>',
        link: function (d, c, b, e) {
            d.goBack = function () {
                a.goBack(-1)
            }
        }
    }
}]);
ddpatientDirectives.directive("hscroller", ["$timeout", function (a) {
    return {
        restrict: "E",
        template: '<div class="hscroller" ng-transclude></div>',
        replace: true,
        transclude: true,
        compile: function (c, b) {
            return function (e, d, g) {
                var f = d[0];
                angular.element(d).bind("scroll", function () {
                    var h = d[0].scrollLeft
                })
            }
        }
    }
}]);
ddpatientDirectives.directive("hcard", ["$rootScope", function (a) {
    return {
        restrict: "E",
        template: '<div class="hscroller-card" ng-transclude></div>',
        replace: true,
        transclude: true,
        scope: {desc: "@", level: "@", location: "@", image: "@", index: "@", href: "@"},
        link: function (e, d, c) {
            var b = angular.element('<a href="' + c.href + '" style="padding-left: 22px"> <img class="hscroller-img" src="' + c.image + '"/></a>');
            d.append(b);
            d.append('<div class="hscroller-label">' + c.desc + c.level + "<br>" + c.location + "</div>")
        }
    }
}]);
ddpatientDirectives.directive("stringToNumber", function () {
    return {
        require: "ngModel", link: function (c, b, a, d) {
            d.$parsers.push(function (e) {
                return "" + e
            });
            d.$formatters.push(function (e) {
                return parseInt(e)
            })
        }
    }
});
ddpatientDirectives.directive("star", function () {
    return {
        restrict: "EACM",
        scope: {ratingValue: "=", max: "=", readonly: "@", onHover: "=", onLeave: "=", starstyle: "@", startext: "@"},
        controller: function (a) {
            a.ratingValue = a.ratingValue || 0;
            a.starstyle = a.starstyle || "rating";
            a.startext = a.startext || "";
            a.max = a.max || 5;
            a.click = function (b) {
                if (a.readonly && a.readonly === "true") {
                    return
                }
                a.ratingValue = b
            };
            a.over = function (b) {
                a.onHover(b)
            };
            a.leave = function (b) {
                a.onLeave(b)
            };
            a.getStarCss = function () {
                return a.starstyle
            }
        },
        template: '<ul ng-class="getStarCss()" ng-mouseleave="leave(val)"> {{startext}}<li ng-repeat="star in stars" style=" margin:1px; display:inline;  font:bold 20px arial; cursor:pointer"  ng-class="star" ng-click="click($index + 1)" ng-mouseover="over($index + 1)"   >â˜…</li></ul>',
        link: function (c, d, a) {
            d.css("text-align", "center");
            var b = function () {
                c.stars = [];
                for (var e = 0; e < c.max; e++) {
                    c.stars.push({filled: e < c.ratingValue})
                }
            };
            b();
            c.$watch("ratingValue", function (e, f) {
                if (f) {
                    b()
                }
            });
            c.$watch("max", function (e, f) {
                if (f) {
                    b()
                }
            })
        }
    }
});