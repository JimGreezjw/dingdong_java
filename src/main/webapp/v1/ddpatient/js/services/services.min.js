var ddpatientServices = angular.module("ddpatientServices", ["ngResource"]);
var serverName = "www.yushansoft.com";
ddpatientServices.factory("userInforList", [function () {
    return {}
}]);
ddpatientServices.factory("doctorInforList", [function () {
    return {}
}]);
ddpatientServices.factory("doctorServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/doctors/:id", null, {
        queryAll: {
            method: "get",
            params: {size: "@size", page: "@number", orderBy: "@orderBy", order: "@order"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("doctorNewJoinServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/doctors/newJoinDoctors", null, {
        queryAll: {
            method: "get",
            params: {requireNum: "@requireNum"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("scheduleServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/doctors/:id/scheduleDates", null, {
        query: {
            method: "get",
            params: {beginDate: "@beginDate", endDate: "@endDate"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("scheduleOnedayServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/doctors/:doctorId/hospitals/:hospitalId/schedules", null, {
        query: {
            method: "get",
            params: {beginDate: "@beginDate", endDate: "@endDate"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("scheduleDatesServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/doctors/:doctorId/hospitals/:hospitalId/scheduleDates", null, {
        query: {
            method: "get",
            params: {beginDate: "@beginDate", endDate: "@endDate"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("scheduleUserServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:userId/schedules/:scheduleId/registers", null, {
        getScheduleUser: {
            method: "get",
            params: {userId: "@userId", scheduleId: "@scheduleId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("cancelUserFansServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:userId/doctorFans", null, {
        cancelUserFans: {
            method: "DELETE",
            params: {userId: "@userId", doctorId: "@doctorId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("userFansServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:id/doctorFans", {id: "@id", doctorId: "@doctorId"})
}]);
ddpatientServices.factory("userQueueServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:id/queues", {
        id: "@id",
        doctorId: "@doctorId",
        hospitalId: "@hospitalId"
    })
}]);
ddpatientServices.factory("userNewQueueServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/registers/queueUp", {}, {
        userQueueUp: {
            method: "POST",
            params: {
                userId: "@userId",
                patientId: "@patientId",
                doctorId: "@doctorId",
                hospitalId: "@hospitalId",
                revisit: "@revisit",
                phenomenon: "@phenomenon",
                attachNo: "@attachNo"
            },
            isArray: false
        }
    })
}]);
ddpatientServices.factory("userMultiQueueServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:id/mutiQueueUp", {
        id: "@id",
        doctorId: "@doctorId",
        hospitalStr: "@hospitalStr"
    })
}]);
ddpatientServices.factory("hospitalServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/docotors/:id/doctorHospitals", {id: "@id"})
}]);
ddpatientServices.factory("registerUpdateServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/registers/:id", {}, {
        registerUpdate: {
            method: "PATCH",
            params: {id: "@id", phenomenon: "@phenomenon", attachNo: "@attachNo"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("hospitalDoctorsServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/hospitals/:hospitalId/doctorHospitals", {}, {
        getHospitalDoctors: {
            method: "GET",
            params: {hospitalId: "@hospitalId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("registerUnFinishedServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:id/registers/unfinished", {id: "@id"})
}]);
ddpatientServices.factory("getRegisterByStatusServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/registers/status", {userId: "@userId"}, {
        getRegisterByStatus: {
            method: "GET",
            params: {status: "@status"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("cancelRegisterServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/registers/:id", {id: "@id"}, {
        cancelRegister: {
            method: "DELETE",
            params: {}
        }
    })
}]);
ddpatientServices.factory("getRegisterByIdServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/registers/:id", {id: "@id"}, {})
}]);
ddpatientServices.factory("ddDeleteQueueServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/registers/queues/:id", {id: "@id"}, {
        deleteQueue: {
            method: "DElETE",
            params: {}
        }
    })
}]);
ddpatientServices.factory("ddSmsValiServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/sms/validNum", {}, {
        validNum: {
            method: "GET",
            params: {mobileNo: "@mobileNo"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddUpdateSmsValiServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/sms/validation", null, {
        updateSmsValid: {
            method: "PUT",
            params: {userId: "@userId", mobileNo: "@mobileNo", msgCode: "@msgCode", imgCode: "@imgCode"}
        }
    })
}]);
ddpatientServices.factory("ddUserServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId", {userId: "@userId"}, {})
}]);
ddpatientServices.factory("ddUserRegisterServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/registers", {userId: "@userId"}, {
        userRegister: {
            method: "POST",
            params: {patientId: "@patientId", scheduleId: "@scheduleId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddUpdateUserInformationServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:id", {id: "@id"}, {
        updateUserInformation: {
            method: "PUT",
            params: {
                name: "@name",
                gender: "@gender",
                address: "@address",
                certificateId: "@certificateId",
                headImgUrl: "@headImgUrl"
            }
        }
    })
}]);
ddpatientServices.factory("ddUserDirectRegisterServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:userId/directRegister", {
        userId: "@userId",
        patientId: "@patientId",
        scheduleId: "@scheduleId",
        phenomenon: "@phenomenon",
        revisit: "@revisit",
        attachNo: "@attachNo"
    })
}]);
ddpatientServices.factory("ddUserConfirmRegisterServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/{userId}/confirmRegister", {
        registerId: "@registerId",
        patientId: "@patientId",
        phenomenon: "@phenomenon",
        revisit: "@revisit",
        attachNo: "@attachNo"
    })
}]);
ddpatientServices.factory("ddGetRegistersByStatusServices", ["$resource", "$http", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/registers/status", {userId: "@userId"}, {
        getRegistersByStatus: {
            method: "GET",
            params: {status: "@status"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddGetDoctorsByNameOrSpecialty", ["$resource", "$http", function (a) {
    return a("http://" + serverName + "/dingdong/doctors", {}, {
        getDoctorsByNameOrSpecialty: {
            method: "GET",
            params: {filterText: "@filterText", size: "@size", page: "@page", order: "@order", orderBy: "@orderBy"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddGetDoctorsnsigned", ["$resource", "$http", function (a) {
    return a("http://" + serverName + "/dingdong/doctors/unsigned", {}, {
        getGetDoctorsnsigned: {
            method: "GET",
            params: {doctorName: "@doctorName"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddHospitalsServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/hospitals", {}, {
        getHospitals: {
            method: "GET",
            params: {filterText: "@filterText", size: "@size", page: "@page", orderBy: "@orderBy", order: "@order"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddHospitalsAllServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/hospitals", {}, {
        getAllHospitals: {
            method: "GET",
            params: {size: "@size", page: "@page", orderBy: "@orderBy", order: "@order"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddConfirmQueueServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/registers/:id/confirmQueue", {id: "@id"}, {
        ddConfirmQueue: {
            method: "POST",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddDoctorHospitalsServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/docotors/:doctorId/doctorHospitals", {}, {
        getDoctorHospitals: {
            method: "GET",
            params: {doctorId: "@doctorId", status: "@status"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddDoctorEvaluationsServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/docotors/:doctorId/doctorEvals", {}, {
        getDoctorEvaluations: {
            method: "GET",
            params: {doctorId: "@doctorId", size: "@size", page: "@page", order: "@order", orderBy: "@orderBy"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddMyEvaluationsServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/doctorEvals", {}, {
        getMyEvaluations: {
            method: "GET",
            params: {userId: "@userId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddUserPatientServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/patients", {}, {
        getUserPatient: {
            method: "GET",
            params: {userId: "@userId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("cancelEvaluationServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/doctorEvals/:id", {id: "@id"}, {
        cancelEvaluation: {
            method: "DELETE",
            params: {}
        }
    })
}]);
ddpatientServices.factory("addEvaluationServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/users/:userId/doctorEval", {
        userId: "@userId",
        registerId: "@registerId",
        treatmentEffect: "@treatmentEffect",
        serviceAttitude: "@serviceAttitude",
        evalDesc: "@evalDesc",
        tags: "@tags"
    })
}]);
ddpatientServices.factory("yusFilesServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/yusFiles/:id", {id: "@id"}, {})
}]);
ddpatientServices.factory("ddAddYusFilesServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/yusFiles", {userId: "@userId", wxServerId: "@wxServerId"})
}]);
ddpatientServices.factory("ddUserPatientAddServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/patients", {userId: "@userId"}, {
        userPatientAdd: {
            method: "POST",
            params: {
                patientName: "@patientName",
                gender: "@gender",
                certificateId: "@certificateId",
                userRelation: "@userRelation",
                phone: "@phone"
            },
            isArray: false
        }
    })
}]);
ddpatientServices.factory("deleteUserPatientServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/patients/:id", {id: "@id"}, {
        deleteUserPatient: {
            method: "DELETE",
            params: {}
        }
    })
}]);
ddpatientServices.factory("getUserPatientServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/patients/:id", {id: "@id"}, {
        getUserPatient: {
            method: "GET",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddUserPatientUpdateServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/patients/:id", {id: "@id"}, {
        userPatientUpdate: {
            method: "PUT",
            params: {
                userId: "@userId",
                name: "@name",
                certificateId: "@certificateId",
                userRelation: "@userRelation",
                gender: "@gender",
                birthday: "@birthday",
                phone: "@phone",
                address: "@address"
            },
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddPatientHistoryServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/doctors/:id/registers/status", {id: "@id"}, {
        queryHistory_Registers: {
            method: "GET",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddGetDoctorQueuesServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/doctors/:doctorId/statQueue", {doctorId: "@doctorId"}, {
        getDoctorQueues: {
            method: "GET",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddJsConfig", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/ddmz/jsConfig", {}, {
        jsConfig: {
            method: "GET",
            params: {url: "@url"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddGetDoctorScheduleDateServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/doctors/:doctorId/hospitals/:hospitalId/schedules", {
        doctorId: "@doctorId",
        hospitalId: "@hospitalId"
    }, {getDoctorScheduleDate: {method: "GET", params: {beginDate: "@beginDate", endDate: "@endDate"}, isArray: false}})
}]);
ddpatientServices.factory("ddGetDoctorHospitalsWithRegisterInfoServices", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/docotors/:doctorId/doctorHospitalsWithRegisterInfo", {doctorId: "@doctorId"}, {
        getDoctorHospitalsWithRegisterInfo: {
            method: "GET",
            params: {userId: "@userId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("userChatService", ["$resource", "$http", "$q", function (a) {
    return a("http://" + serverName + "/dingdong/userChat/:fromId", {}, {})
}]);
ddpatientServices.factory("ddUserTransfersServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/Transfers", {userId: "@userId"}, {
        getUserTransfers: {
            method: "GET",
            params: {type: "@type", size: "@size", page: "@page"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddUserChatAllServices", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/users/:userId/msgs/:endDate", {userId: "@userId"}, {
        method: "GET",
        params: {size: "@size", page: "@page"},
        isArray: false
    })
}]);
ddpatientServices.factory("ddUserTwoUserMsgs", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/msgs", {userId: "@userId"}, {
        method: "GET",
        params: {fromUserId: "fromUserId", toUserId: "toUserId", size: "@size", page: "@page"},
        isArray: false
    })
}]);
ddpatientServices.factory("ddUserReadMsgs", ["$resource", function (a) {
    return a("http://" + serverName + "/dingdong/msgs/:toId/read", {toId: "@toId"}, {
        readMsgs: {
            method: "PATCH",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("ddRegistersServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/registers/:id", {id: "@id"}, {})
}]);
ddpatientServices.factory("ddPatientDetailServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/patients/:patientId", {patientId: "@patientId"}, {})
}]);
ddpatientServices.factory("getDoctorEvalsByRegisterServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/registers/:registerId/doctorEvals", {registerId: "@registerId"}, {
        getDoctorEvalsByRegisterId: {
            method: "GET",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("hospitalDeptTreeServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/hospitalDepts/:hospitalId/tree", {registerId: "@registerId"}, {
        method: "GET",
        params: {hospitalId: "@hospitalId", size: "@size", page: "@page"},
        isArray: false
    })
}]);
ddpatientServices.factory("getDoctorsTagsServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/systag/tags", {}, {
        getDoctorsTags: {
            method: "GET",
            params: {},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("getHosipitalIntroServices", ["$resource", "$q", function (b, a) {
    return b("http://" + serverName + "/dingdong/hospitals/:hospitalId", {}, {
        getSingleHosiptal: {
            method: "GET",
            params: {hospitalId: "@hospitalId"},
            isArray: false
        }
    })
}]);
ddpatientServices.factory("showPopupServices", ["$ionicPopup", function (b) {
    var a = {
        showPopup: function () {
            var c = b.show({
                template: '<input type="password" ng-model="data.wifi">',
                title: "Enter Wi-Fi Password",
                subTitle: "Please use normal things",
                scope: $scope,
                buttons: [{text: "Cancel"}, {
                    text: "<b>Save</b>", type: "button-positive", onTap: function (d) {
                        if (!$scope.data.wifi) {
                            d.preventDefault()
                        } else {
                            return $scope.data.wifi
                        }
                    }
                }]
            });
            c.then(function (d) {
                console.log("Tapped!", d)
            });
            $timeout(function () {
                c.close()
            }, 3000)
        }, showConfirm: function () {
            var c = b.confirm({title: "Consume Ice Cream", template: "Are you sure you want to eat this ice cream?"});
            c.then(function (d) {
                if (d) {
                    console.log("You are sure")
                } else {
                    console.log("You are not sure")
                }
            })
        }, showAlert: function (e, d) {
            var c = b.alert({title: e, template: d, buttons: [{text: "确定"}]});
            c.then(function (f) {
            })
        }
    };
    return a
}]);