<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dingdong.sys.mapper.MsgMapper">
    <resultMap type="msg" id="msgMap">
        <id property="id" column="id" />
        <result property="fromUserId" column="from_user_id" />
		<result property="toUserId" column="to_user_id" />
		<result property="type" column="type" />
		<result property="content" column="content" />		
		<result property="status" column="status"  />
		<result property="createTime" column="create_time" />
    </resultMap>

    <select id="findById" resultType="msg" resultMap="msgMap">
        select * from msg where id=#{id}
    </select>

	<insert id="addMsg">
        insert into msg (from_user_id,to_user_id,content,create_time,type,status)
		 values(#{msg.fromUserId},#{msg.toUserId}, #{msg.content},#{msg.createTime}, 
		 #{msg.type},#{msg.status})
		 
		 <selectKey resultType="java.lang.Long" keyProperty="msg.id">  
		      SELECT LAST_INSERT_ID() AS ID   
		    </selectKey> 
    </insert>

     <select id="findChatsByFromUserIdAndToUserId" resultMap="msgMap">
        select * from msg where ((from_user_id=#{fromUserId} and to_user_id=#{toUserId})  or (from_user_id=#{toUserId} and to_user_id=#{fromUserId}) )  
        order by create_time desc limit #{page.offset}, #{page.size};
    </select>

     <update id="updateMsgRead">
        update msg set status=3 where id=#{id} 
    </update>

	<select id="findUnReadMsgs" resultMap="msgMap">
        select * from msg where  to_user_id=#{userId} and status&lt;3   
        order by create_time desc limit #{page.offset}, #{page.size};
    </select>
	
</mapper>